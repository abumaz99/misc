{"ast":null,"code":"var _jsxFileName = \"/Users/user2/Desktop/programming/cost-estimation/src/components/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport TableRow from './TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table({\n  onTableCostChange\n}) {\n  _s();\n  const [rows, setRows] = useState([]);\n  const shirtValues = {\n    'S': 1,\n    'M': 2,\n    'L': 3\n  };\n  const branchValues = {\n    'A': 4,\n    'B': 5,\n    'C': 6\n  };\n  const handleAddRow = () => {\n    setRows(prevRows => [...prevRows, {}]);\n  };\n  const calculateTableCost = () => {\n    let totalCost = 0;\n\n    // Assuming each TableRow component has a method getCurrentValues to retrieve its current state\n    rows.forEach(rowRef => {\n      const rowValues = rowRef.current.getCurrentValues();\n      totalCost += shirtValues[rowValues.shirtSize] + branchValues[rowValues.branch];\n    });\n    onTableCostChange(totalCost);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T-shirt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((_, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          ref: rows[index]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateTableCost,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"hR9YpnrxwuECfSkxYkxuHkgKgl8=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useRef","TableRow","jsxDEV","_jsxDEV","Table","onTableCostChange","_s","rows","setRows","shirtValues","branchValues","handleAddRow","prevRows","calculateTableCost","totalCost","forEach","rowRef","rowValues","current","getCurrentValues","shirtSize","branch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_","index","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/user2/Desktop/programming/cost-estimation/src/components/Table.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport TableRow from './TableRow';\n\nfunction Table({ onTableCostChange }) {\n  const [rows, setRows] = useState([]);\n  \n  const shirtValues = {'S': 1, 'M': 2, 'L': 3};\n  const branchValues = {'A': 4, 'B': 5, 'C': 6};\n\n  const handleAddRow = () => {\n    setRows((prevRows) => [...prevRows, {}]);\n  };\n\n  const calculateTableCost = () => {\n    let totalCost = 0;\n\n    // Assuming each TableRow component has a method getCurrentValues to retrieve its current state\n    rows.forEach(rowRef => {\n      const rowValues = rowRef.current.getCurrentValues();\n      totalCost += shirtValues[rowValues.shirtSize] + branchValues[rowValues.branch];\n    });\n\n    onTableCostChange(totalCost);\n  };\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>T-shirt</th>\n            <th>Branch</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((_, index) => (\n            <TableRow key={index} ref={rows[index]} />\n          ))}\n        </tbody>\n      </table>\n      <button onClick={handleAddRow}>Add Row</button>\n      <button onClick={calculateTableCost}>Calculate</button>\n    </div>\n  );\n}\n\nexport default Table;\n\n\n\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,KAAKA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,WAAW,GAAG;IAAC,GAAG,EAAE,CAAC;IAAE,GAAG,EAAE,CAAC;IAAE,GAAG,EAAE;EAAC,CAAC;EAC5C,MAAMC,YAAY,GAAG;IAAC,GAAG,EAAE,CAAC;IAAE,GAAG,EAAE,CAAC;IAAE,GAAG,EAAE;EAAC,CAAC;EAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBH,OAAO,CAAEI,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,SAAS,GAAG,CAAC;;IAEjB;IACAP,IAAI,CAACQ,OAAO,CAACC,MAAM,IAAI;MACrB,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAO,CAACC,gBAAgB,CAAC,CAAC;MACnDL,SAAS,IAAIL,WAAW,CAACQ,SAAS,CAACG,SAAS,CAAC,GAAGV,YAAY,CAACO,SAAS,CAACI,MAAM,CAAC;IAChF,CAAC,CAAC;IAEFhB,iBAAiB,CAACS,SAAS,CAAC;EAC9B,CAAC;EAED,oBACEX,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,eACEnB,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YAAAmB,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBvB,OAAA;YAAAmB,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRvB,OAAA;QAAAmB,QAAA,EACGf,IAAI,CAACoB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACjB1B,OAAA,CAACF,QAAQ;UAAa6B,GAAG,EAAEvB,IAAI,CAACsB,KAAK;QAAE,GAAxBA,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRvB,OAAA;MAAQ4B,OAAO,EAAEpB,YAAa;MAAAW,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/CvB,OAAA;MAAQ4B,OAAO,EAAElB,kBAAmB;MAAAS,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACpB,EAAA,CAzCQF,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AA2Cd,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}