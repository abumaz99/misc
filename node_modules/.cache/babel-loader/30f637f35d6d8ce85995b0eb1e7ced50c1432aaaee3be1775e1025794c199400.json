{"ast":null,"code":"var _jsxFileName = \"/Users/user2/Desktop/programming/cost-estimation/src/components/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport TableRow from './TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  forwardedRef\n}) => {\n  _s();\n  const [rowValues, setRowValues] = useState([]);\n  const shirtValues = {\n    'S': 1,\n    'M': 2,\n    'L': 3\n  };\n  const branchValues = {\n    'A': 4,\n    'B': 5,\n    'C': 6\n  };\n  const handleAddRow = () => {\n    setRowValues(prevValues => [...prevValues, {\n      shirtSize: 'S',\n      branch: 'A'\n    }]);\n  };\n  const handleRowValueChange = (index, shirt, branch) => {\n    const updatedValues = [...rowValues];\n    updatedValues[index] = {\n      shirtSize: shirt,\n      branch: branch\n    };\n    setRowValues(updatedValues);\n  };\n  const getTotalCost = () => {\n    return rowValues.reduce((acc, row) => {\n      return acc + shirtValues[row.shirtSize] + branchValues[row.branch];\n    }, 0);\n  };\n  if (forwardedRef) {\n    forwardedRef.current = {\n      getTotalCost: getTotalCost\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T-shirt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rowValues.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          onValuesChange: (shirt, branch) => handleRowValueChange(index, shirt, branch)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"UlYe9fBfvDUKw5h1U9af4tKprMc=\");\n_c = Table;\nconst TableWithRef = /*#__PURE__*/React.forwardRef(_c2 = (props, ref) => /*#__PURE__*/_jsxDEV(Table, {\n  forwardedRef: ref,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this));\n_c3 = TableWithRef;\nexport default TableWithRef;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"TableWithRef$React.forwardRef\");\n$RefreshReg$(_c3, \"TableWithRef\");","map":{"version":3,"names":["React","useState","useRef","TableRow","jsxDEV","_jsxDEV","Table","forwardedRef","_s","rowValues","setRowValues","shirtValues","branchValues","handleAddRow","prevValues","shirtSize","branch","handleRowValueChange","index","shirt","updatedValues","getTotalCost","reduce","acc","row","current","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onValuesChange","onClick","_c","TableWithRef","forwardRef","_c2","props","ref","_c3","$RefreshReg$"],"sources":["/Users/user2/Desktop/programming/cost-estimation/src/components/Table.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport TableRow from './TableRow';\n\nconst Table = ({ forwardedRef }) => {\n  const [rowValues, setRowValues] = useState([]);\n  const shirtValues = {'S': 1, 'M': 2, 'L': 3};\n  const branchValues = {'A': 4, 'B': 5, 'C': 6};\n\n  const handleAddRow = () => {\n    setRowValues((prevValues) => [...prevValues, { shirtSize: 'S', branch: 'A' }]);\n  };\n\n  const handleRowValueChange = (index, shirt, branch) => {\n    const updatedValues = [...rowValues];\n    updatedValues[index] = { shirtSize: shirt, branch: branch };\n    setRowValues(updatedValues);\n  };\n\n  const getTotalCost = () => {\n    return rowValues.reduce((acc, row) => {\n      return acc + shirtValues[row.shirtSize] + branchValues[row.branch];\n    }, 0);\n  };\n\n  if (forwardedRef) {\n    forwardedRef.current = {\n      getTotalCost: getTotalCost\n    };\n  }\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>T-shirt</th>\n            <th>Branch</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rowValues.map((row, index) => (\n            <TableRow\n              key={index}\n              onValuesChange={(shirt, branch) => handleRowValueChange(index, shirt, branch)}\n            />\n          ))}\n        </tbody>\n      </table>\n      <button onClick={handleAddRow}>Add Row</button>\n    </div>\n  );\n};\n\nconst TableWithRef = React.forwardRef((props, ref) => (\n  <Table forwardedRef={ref} {...props} />\n));\n\nexport default TableWithRef;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}