{"ast":null,"code":"var _jsxFileName = \"/Users/user2/Desktop/programming/cost-estimation/src/components/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TableRow from './TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table({\n  onTableCostChange\n}) {\n  _s();\n  const [rowValues, setRowValues] = useState([]);\n  const shirtValues = {\n    'S': 1,\n    'M': 2,\n    'L': 3\n  };\n  const branchValues = {\n    'A': 4,\n    'B': 5,\n    'C': 6\n  };\n  const handleAddRow = () => {\n    setRowValues(prevValues => [...prevValues, {\n      shirtSize: 'S',\n      branch: 'A'\n    }]);\n  };\n  const handleRowValueChange = (index, shirt, branch) => {\n    const updatedValues = [...rowValues];\n    updatedValues[index] = {\n      shirtSize: shirt,\n      branch: branch\n    };\n    setRowValues(updatedValues);\n  };\n  const calculateTableCost = () => {\n    let totalCost = 0;\n    rowValues.forEach(row => {\n      totalCost += shirtValues[row.shirtSize] + branchValues[row.branch];\n    });\n    onTableCostChange(totalCost);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T-shirt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rowValues.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          onValuesChange: (shirt, branch) => handleRowValueChange(index, shirt, branch)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateTableCost,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"UlYe9fBfvDUKw5h1U9af4tKprMc=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","TableRow","jsxDEV","_jsxDEV","Table","onTableCostChange","_s","rowValues","setRowValues","shirtValues","branchValues","handleAddRow","prevValues","shirtSize","branch","handleRowValueChange","index","shirt","updatedValues","calculateTableCost","totalCost","forEach","row","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onValuesChange","onClick","_c","$RefreshReg$"],"sources":["/Users/user2/Desktop/programming/cost-estimation/src/components/Table.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TableRow from './TableRow';\n\nfunction Table({ onTableCostChange }) {\n  const [rowValues, setRowValues] = useState([]);\n  const shirtValues = {'S': 1, 'M': 2, 'L': 3};\n  const branchValues = {'A': 4, 'B': 5, 'C': 6};\n\n  const handleAddRow = () => {\n    setRowValues((prevValues) => [...prevValues, { shirtSize: 'S', branch: 'A' }]);\n  };\n\n  const handleRowValueChange = (index, shirt, branch) => {\n    const updatedValues = [...rowValues];\n    updatedValues[index] = { shirtSize: shirt, branch: branch };\n    setRowValues(updatedValues);\n  };\n\n  const calculateTableCost = () => {\n    let totalCost = 0;\n    rowValues.forEach(row => {\n      totalCost += shirtValues[row.shirtSize] + branchValues[row.branch];\n    });\n    onTableCostChange(totalCost);\n  };\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>T-shirt</th>\n            <th>Branch</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rowValues.map((row, index) => (\n            <TableRow\n              key={index}\n              onValuesChange={(shirt, branch) => handleRowValueChange(index, shirt, branch)}\n            />\n          ))}\n        </tbody>\n      </table>\n      <button onClick={handleAddRow}>Add Row</button>\n      <button onClick={calculateTableCost}>Calculate</button>\n    </div>\n  );\n}\n\nexport default Table;\n\n\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}